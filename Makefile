current_dir = $(shell pwd)

PROJECT = identity_matching
COMMANDS = cmd/match-identities

PKG_OS = darwin linux

DOCKERFILES = Dockerfile:$(PROJECT)
DOCKER_ORG = srcd

# Including ci Makefile
CI_REPOSITORY ?= https://github.com/src-d/ci.git
CI_BRANCH ?= v1
CI_PATH ?= .ci
MAKEFILE := $(CI_PATH)/Makefile.main
$(MAKEFILE):
	git clone --quiet --depth 1 -b $(CI_BRANCH) $(CI_REPOSITORY) $(CI_PATH);
-include $(MAKEFILE)
ifdef TRAVIS_PULL_REQUEST
ifneq ($(TRAVIS_PULL_REQUEST), false)
GOTEST += -tags cipr
$(info Pull Request test mode: $(GOTEST))
endif
endif

fix-style:
	gofmt -s -w .
	goimports -w .

.ONESHELL:
.POSIX:
check-style:
	golint -set_exit_status ./...
	# Run `make fix-style` to fix style errors
	test -z "$$(gofmt -s -d .)"
	test -z "$$(goimports -d .)"
	go vet
	pycodestyle --max-line-length=99 $(current_dir)/research $(current_dir)/parquet2sql

check-generate:
	# -modtime flag is required to make `make check-generate` work.
	# Otherwise, the regenerated file has a different modtime value.
	# `1562752805` corresponds to 2019-07-10 12:00:05 CEST.
	esc -pkg idmatch -prefix blacklists -modtime 1562752805 blacklists | \
		diff --ignore-matching-lines="\/\/ Code generated by \".*\"; DO NOT EDIT\." blacklists.go - \
 		# Run `go generate` to update autogenerated files

install-dev-deps:
	pip3 install --user pycodestyle==2.5.0
	go get -v golang.org/x/lint/golint github.com/mjibson/esc golang.org/x/tools/cmd/goimports

docker-build:
	docker build -t identity-matching .

docker-test: docker-build
	docker-compose up -d postgres
	docker run --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=1 -p 3305:3306 --ip 0.0.0.0 -d mysql
	sleep 5
	docker exec -i mysql mysql -u root --password='' -h 0.0.0.0 < ./test_commits.sql
	docker run --network=host \
    -e IDENTITY_MATCHING_OUTPUT="identities" \
    -e IDENTITY_MATCHING_GITBASE_HOST="0.0.0.0" \
    -e IDENTITY_MATCHING_GITBASE_PORT="3305" \
    -e IDENTITY_MATCHING_GITBASE_USER="root" \
    -e IDENTITY_MATCHING_GITBASE_PASSWORD="" \
    -e IDENTITY_MATCHING_POSTGRES_DB="superset"\
    -e IDENTITY_MATCHING_POSTGRES_USER="superset" \
    -e IDENTITY_MATCHING_POSTGRES_PASSWORD="superset" \
    -e IDENTITY_MATCHING_POSTGRES_HOST="0.0.0.0" \
    -e IDENTITY_MATCHING_POSTGRES_PORT="5432" \
    -e IDENTITY_MATCHING_POSTGRES_ALIASES_TABLE="aliases" \
    -e IDENTITY_MATCHING_POSTGRES_IDENTITIES_TABLE="identities" \
    -e IDENTITY_MATCHING_MAX_IDENTITIES="20" \
	identity-matching ./identities2sql.sh
	docker exec -it identity-matching_postgres_1 psql -U superset -c "SELECT * FROM identities ORDER BY id" \
	> identities.txt
	docker exec -it identity-matching_postgres_1 psql -U superset -c "SELECT * FROM aliases ORDER BY \
	id, name, repo" > aliases.txt
	if cmp -s identities.txt test_identities.txt; then
	    printf 'Result test identities are wrong'
	    exit 1
	if cmp -s aliases.txt test_aliases.txt; then
	    printf 'Result test aliases are wrong'
	    exit 1

.PHONY: check-style check-generate install-dev-deps fix-style docker-build docker-compose-build